{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\the-shop-app\\\\screens\\\\shop\\\\ProductDetailScreen.js\";\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Colors from \"../../constants/Colors\";\nimport * as cartActions from \"../../store/actions/cart\";\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var dispatch = useDispatch();\n  var productId = props.navigation.getParam('productId');\n  var selectedProduct = useSelector(function (state) {\n    return state.products.availableProducts.find(function (prod) {\n      return prod.id === productId;\n    });\n  });\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: selectedProduct.imageUrl\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: Colors.primary,\n    title: \"Add to Cart\",\n    onPress: function onPress() {\n      dispatch(cartActions.addToCart(selectedProduct));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: styles.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"$\", selectedProduct.price.toFixed(2)), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, selectedProduct.description));\n};\n\nProductDetailScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: navData.navigation.getParam('productTitle')\n  };\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: 300\n  },\n  actions: {\n    marginVertical: 10,\n    alignItems: 'center'\n  },\n  price: {\n    fontSize: 20,\n    color: '#888',\n    textAlign: 'center',\n    marginVertical: 20,\n    fontFamily: 'open-sans-bold'\n  },\n  description: {\n    fontSize: 14,\n    fontFamily: 'open-sans',\n    textAlign: 'center',\n    marginHorizontal: 20\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/the-shop-app/screens/shop/ProductDetailScreen.js"],"names":["React","useSelector","useDispatch","Colors","cartActions","ProductDetailScreen","props","dispatch","productId","navigation","getParam","selectedProduct","state","products","availableProducts","find","prod","id","styles","image","uri","imageUrl","actions","primary","addToCart","price","toFixed","description","navigationOptions","navData","headerTitle","StyleSheet","create","width","height","marginVertical","alignItems","fontSize","color","textAlign","fontFamily","marginHorizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AAEA,OAAOC,MAAP;AACA,OAAO,KAAKC,WAAZ;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AACnC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,SAAS,GAAGF,KAAK,CAACG,UAAN,CAAiBC,QAAjB,CAA0B,WAA1B,CAAlB;AACA,MAAMC,eAAe,GAAGV,WAAW,CAAC,UAAAW,KAAK;AAAA,WACvCA,KAAK,CAACC,QAAN,CAAeC,iBAAf,CAAiCC,IAAjC,CAAsC,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYT,SAAhB;AAAA,KAA1C,CADuC;AAAA,GAAN,CAAnC;AAIA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEU,MAAM,CAACC,KAArB;AAA4B,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAET,eAAe,CAACU;AAAtB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OAAtB;AAAgC,IAAA,KAAK,EAAC,aAAtC;AAAoD,IAAA,OAAO,EAAE,mBAAM;AACjEhB,MAAAA,QAAQ,CAACH,WAAW,CAACoB,SAAZ,CAAsBb,eAAtB,CAAD,CAAR;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8Bd,eAAe,CAACc,KAAhB,CAAsBC,OAAtB,CAA8B,CAA9B,CAA9B,CAPJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmChB,eAAe,CAACgB,WAAnD,CARJ,CADF;AAYD,CAnBD;;AAqBAtB,mBAAmB,CAACuB,iBAApB,GAAwC,UAAAC,OAAO,EAAI;AACjD,SAAO;AACLC,IAAAA,WAAW,EAAED,OAAO,CAACpB,UAAR,CAAmBC,QAAnB,CAA4B,cAA5B;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMQ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7Bb,EAAAA,KAAK,EAAE;AACHc,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GADsB;AAK7BZ,EAAAA,OAAO,EAAE;AACLa,IAAAA,cAAc,EAAE,EADX;AAELC,IAAAA,UAAU,EAAE;AAFP,GALoB;AAS7BX,EAAAA,KAAK,EAAE;AACHY,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,SAAS,EAAE,QAHR;AAIHJ,IAAAA,cAAc,EAAE,EAJb;AAKHK,IAAAA,UAAU,EAAE;AALT,GATsB;AAgB7Bb,EAAAA,WAAW,EAAE;AACTU,IAAAA,QAAQ,EAAE,EADD;AAETG,IAAAA,UAAU,EAAE,WAFH;AAGTD,IAAAA,SAAS,EAAE,QAHF;AAITE,IAAAA,gBAAgB,EAAE;AAJT;AAhBgB,CAAlB,CAAf;AAwBA,eAAepC,mBAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  ScrollView,\r\n  View,\r\n  Text,\r\n  Image,\r\n  Button,\r\n  StyleSheet\r\n} from 'react-native';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\n\r\nimport Colors from '../../constants/Colors';\r\nimport * as cartActions from '../../store/actions/cart';\r\n\r\nconst ProductDetailScreen = props => {\r\n  const dispatch = useDispatch();\r\n  const productId = props.navigation.getParam('productId');\r\n  const selectedProduct = useSelector(state =>\r\n    state.products.availableProducts.find(prod => prod.id === productId)\r\n  );\r\n\r\n  return (\r\n    <ScrollView>\r\n        <Image style={styles.image} source={{uri: selectedProduct.imageUrl}} />\r\n        <View style={styles.actions}>\r\n            <Button color={Colors.primary}  title=\"Add to Cart\" onPress={() => {\r\n              dispatch(cartActions.addToCart(selectedProduct));\r\n            }}/>\r\n        </View>\r\n        <Text style={styles.price} >${selectedProduct.price.toFixed(2)}</Text>\r\n        <Text style={styles.description} >{selectedProduct.description}</Text>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nProductDetailScreen.navigationOptions = navData => {\r\n  return {\r\n    headerTitle: navData.navigation.getParam('productTitle')\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    image: {\r\n        width: '100%',\r\n        height: 300\r\n    },\r\n    actions: {\r\n        marginVertical: 10,\r\n        alignItems: 'center'\r\n    },  \r\n    price: {\r\n        fontSize: 20,\r\n        color: '#888',\r\n        textAlign: 'center',\r\n        marginVertical: 20,\r\n        fontFamily: 'open-sans-bold'\r\n    },\r\n    description: {\r\n        fontSize: 14,\r\n        fontFamily: 'open-sans',\r\n        textAlign: 'center',\r\n        marginHorizontal: 20\r\n    }\r\n});\r\n\r\nexport default ProductDetailScreen;\r\n"]},"metadata":{},"sourceType":"module"}