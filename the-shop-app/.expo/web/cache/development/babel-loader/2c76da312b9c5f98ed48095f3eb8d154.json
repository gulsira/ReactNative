{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\the-shop-app\\\\navigation\\\\ShopNavigator.js\";\nimport React, { useCallback } from 'react';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createDrawerNavigator, DrawerItems } from 'react-navigation-drawer';\nimport { useDispatch } from 'react-redux';\nimport ProductsOverviewScreen from \"../screens/shop/ProductsOverviewScreen\";\nimport ProductDetailScreen from \"../screens/shop/ProductDetailScreen\";\nimport CartScreen from \"../screens/shop/CartScreen\";\nimport OrdersScreen from \"../screens/shop/OrdersScreen\";\nimport UserProductsScreen from \"../screens/user/UserProductsScreen\";\nimport EditProductScreen from \"../screens/user/EditProductScreen\";\nimport AuthScreen from \"../screens/user/AuthScreen\";\nimport StartupScreen from \"../screens/StartupScreen\";\nimport * as authActions from \"../store/actions/auth\";\nimport Colors from \"../constants/Colors\";\nvar defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Platform.OS === 'android' ? Colors.primary : ''\n  },\n  headerTitleStyle: {\n    fontFamily: 'open-sans-bold'\n  },\n  headerBackTitleStyle: {\n    fontFamily: 'open-sans'\n  },\n  headerTintColor: Platform.OS === 'android' ? 'white' : Colors.primary\n};\nvar ProductsNavigator = createStackNavigator({\n  ProductsOverview: ProductsOverviewScreen,\n  ProductDetail: ProductDetailScreen,\n  Cart: CartScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return React.createElement(Ionicons, {\n        name: Platform.OS === 'android' ? 'md-cart' : 'ios-cart',\n        size: 23,\n        color: drawerConfig.tintColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar OrdersNavigator = createStackNavigator({\n  Orders: OrdersScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return React.createElement(Ionicons, {\n        name: Platform.OS === 'android' ? 'md-list' : 'ios-list',\n        size: 23,\n        color: drawerConfig.tintColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar AdminNavigator = createStackNavigator({\n  UserProducts: UserProductsScreen,\n  EditProduct: EditProductScreen\n}, {\n  navigationOptions: {\n    drawerIcon: function drawerIcon(drawerConfig) {\n      return React.createElement(Ionicons, {\n        name: Platform.OS === 'android' ? 'md-create' : 'ios-create',\n        size: 23,\n        color: drawerConfig.tintColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      });\n    }\n  },\n  defaultNavigationOptions: defaultNavOptions\n});\nvar ShopNavigator = createDrawerNavigator({\n  Products: ProductsNavigator,\n  Orders: OrdersNavigator,\n  Admin: AdminNavigator\n}, {\n  contentOptions: {\n    activeTintColor: Colors.primary\n  },\n  contentComponent: function contentComponent(props) {\n    var dispatch = useDispatch();\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        paddingTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, React.createElement(SafeAreaView, {\n      forceInset: {\n        top: 'always',\n        horizontal: 'never'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, React.createElement(DrawerItems, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })), React.createElement(Button, {\n      title: \"Logout\",\n      color: Colors.primary,\n      onPress: function onPress() {\n        dispatch(authActions.logout());\n        props.navigation.navigate('Auth');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })));\n  }\n});\nvar AuthNavigator = createStackNavigator({\n  Auth: AuthScreen\n}, {\n  defaultNavigationOptions: defaultNavOptions\n});\nvar MainNavigator = createSwitchNavigator({\n  Startup: StartupScreen,\n  Auth: AuthNavigator,\n  Shop: ShopNavigator\n});\nexport default createAppContainer(MainNavigator);","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/the-shop-app/navigation/ShopNavigator.js"],"names":["React","useCallback","createStackNavigator","createAppContainer","createSwitchNavigator","Ionicons","createDrawerNavigator","DrawerItems","useDispatch","ProductsOverviewScreen","ProductDetailScreen","CartScreen","OrdersScreen","UserProductsScreen","EditProductScreen","AuthScreen","StartupScreen","authActions","Colors","defaultNavOptions","headerStyle","backgroundColor","Platform","OS","primary","headerTitleStyle","fontFamily","headerBackTitleStyle","headerTintColor","ProductsNavigator","ProductsOverview","ProductDetail","Cart","navigationOptions","drawerIcon","drawerConfig","tintColor","defaultNavigationOptions","OrdersNavigator","Orders","AdminNavigator","UserProducts","EditProduct","ShopNavigator","Products","Admin","contentOptions","activeTintColor","contentComponent","props","dispatch","flex","paddingTop","top","horizontal","logout","navigation","navigate","AuthNavigator","Auth","MainNavigator","Startup","Shop"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport {createStackNavigator} from 'react-navigation-stack';\r\nimport {createAppContainer,createSwitchNavigator} from 'react-navigation';\r\nimport {Platform, SafeAreaView,Button,View} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createDrawerNavigator , DrawerItems} from 'react-navigation-drawer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport ProductsOverviewScreen from '../screens/shop/ProductsOverviewScreen';\r\nimport ProductDetailScreen from '../screens/shop/ProductDetailScreen';\r\nimport CartScreen from '../screens/shop/CartScreen';\r\nimport OrdersScreen from '../screens/shop/OrdersScreen';\r\nimport UserProductsScreen from '../screens/user/UserProductsScreen';\r\nimport EditProductScreen from '../screens/user/EditProductScreen';\r\nimport AuthScreen from '../screens/user/AuthScreen';\r\nimport StartupScreen from '../screens/StartupScreen';\r\nimport * as authActions from '../store/actions/auth';\r\nimport Colors from '../constants/Colors';\r\n\r\n\r\nconst defaultNavOptions = {\r\n  headerStyle: {\r\n    backgroundColor: Platform.OS === 'android' ? Colors.primary : ''\r\n  },\r\n  headerTitleStyle: {\r\n    fontFamily: 'open-sans-bold'\r\n  },\r\n  headerBackTitleStyle: {\r\n    fontFamily: 'open-sans'\r\n  },\r\n  headerTintColor: Platform.OS === 'android' ? 'white' : Colors.primary\r\n};\r\n\r\nconst ProductsNavigator = createStackNavigator(\r\n  {\r\n    ProductsOverview: ProductsOverviewScreen,\r\n    ProductDetail: ProductDetailScreen,\r\n    Cart: CartScreen\r\n  },\r\n  {\r\n    navigationOptions: {\r\n      drawerIcon: drawerConfig => (\r\n        <Ionicons\r\n          name={Platform.OS === 'android' ? 'md-cart' : 'ios-cart'}\r\n          size={23}\r\n          color={drawerConfig.tintColor}\r\n        />\r\n      )\r\n    },\r\n    defaultNavigationOptions: defaultNavOptions\r\n  }\r\n);\r\n\r\nconst OrdersNavigator = createStackNavigator(\r\n  {\r\n    Orders: OrdersScreen\r\n  },\r\n  {\r\n    navigationOptions: {\r\n      drawerIcon: drawerConfig => (\r\n        <Ionicons\r\n          name={Platform.OS === 'android' ? 'md-list' : 'ios-list'}\r\n          size={23}\r\n          color={drawerConfig.tintColor}\r\n        />\r\n      )\r\n    },\r\n    defaultNavigationOptions: defaultNavOptions\r\n  }\r\n);\r\n\r\nconst AdminNavigator = createStackNavigator(\r\n    {\r\n      UserProducts: UserProductsScreen,\r\n      EditProduct: EditProductScreen\r\n    },\r\n    {\r\n      navigationOptions: {\r\n        drawerIcon: drawerConfig => (\r\n          <Ionicons\r\n            name={Platform.OS === 'android' ? 'md-create' : 'ios-create'}\r\n            size={23}\r\n            color={drawerConfig.tintColor}\r\n          />\r\n        )\r\n      },\r\n      defaultNavigationOptions: defaultNavOptions\r\n    }\r\n  );\r\n\r\nconst ShopNavigator = createDrawerNavigator(\r\n  {\r\n    Products: ProductsNavigator,\r\n    Orders: OrdersNavigator,\r\n    Admin: AdminNavigator\r\n  },\r\n  {\r\n    contentOptions: {\r\n      activeTintColor: Colors.primary\r\n    },\r\n    contentComponent: props => {\r\n      const dispatch = useDispatch();\r\n      return (\r\n        <View style={{flex: 1, paddingTop: 20}}> \r\n          <SafeAreaView forceInset={{top: 'always' , horizontal: 'never'}}>\r\n            <DrawerItems {...props}  />\r\n            <Button title=\"Logout\" color={Colors.primary} onPress={() => {\r\n              dispatch(authActions.logout());\r\n              props.navigation.navigate('Auth');\r\n            }} />\r\n          </SafeAreaView>\r\n        </View>\r\n      )\r\n    }\r\n  }\r\n);\r\n\r\nconst AuthNavigator = createStackNavigator({\r\n  Auth: AuthScreen\r\n}, {\r\n  defaultNavigationOptions: defaultNavOptions\r\n});\r\n\r\nconst MainNavigator = createSwitchNavigator({\r\n  Startup: StartupScreen,\r\n  Auth: AuthNavigator,\r\n  Shop: ShopNavigator\r\n})\r\n\r\nexport default createAppContainer(MainNavigator);\r\n"]},"metadata":{},"sourceType":"module"}