{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PRODUCTS from \"../../data/dummy-data\";\nimport { DELETE_PRODUCT, CREATE_PRODUCT, UPDATE_PRODUCT, SET_PRODUCTS } from \"../actions/products\";\nimport Product from \"../../models/product\";\nvar initialState = {\n  availableProducts: PRODUCTS,\n  userProducts: PRODUCTS.filter(function (prod) {\n    return prod.ownerId === 'u1';\n  })\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_PRODUCTS:\n      return {\n        availableProducts: action.products,\n        userProducts: action.userProducts\n      };\n\n    case CREATE_PRODUCT:\n      var newProduct = new Product(action.productData.id, action.productData.ownerId, action.productData.title, action.productData.imageUrl, action.productData.description, action.productData.price);\n      return _objectSpread({}, state, {\n        availableProducts: state.availableProducts.concat(newProduct),\n        userProducts: state.userProducts.concat(newProduct)\n      });\n\n    case UPDATE_PRODUCT:\n      var productIndex = state.userProducts.findIndex(function (prod) {\n        return prod.id === action.pid;\n      });\n      var updatedProduct = new Product(action.pid, state.userProducts[productIndex].ownerId, action.productData.title, action.productData.imageUrl, action.productData.description, state.userProducts[productIndex].price);\n\n      var updatedUserProducts = _toConsumableArray(state.userProducts);\n\n      updatedUserProducts[productIndex] = updatedProduct;\n      var availableProductIndex = state.availableProducts.findIndex(function (prod) {\n        return prod.id === action.pid;\n      });\n\n      var updatedAvailableProducts = _toConsumableArray(state.availableProducts);\n\n      updatedAvailableProducts[availableProductIndex] = updatedProduct;\n      return _objectSpread({}, state, {\n        availableProducts: updatedAvailableProducts,\n        userProducts: updatedUserProducts\n      });\n\n    case DELETE_PRODUCT:\n      return _objectSpread({}, state, {\n        userProducts: state.userProducts.filter(function (product) {\n          return product.id !== action.pid;\n        }),\n        availableProducts: state.availableProducts.filter(function (product) {\n          return product.id !== action.pid;\n        })\n      });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/the-shop-app/store/reducers/products.js"],"names":["PRODUCTS","DELETE_PRODUCT","CREATE_PRODUCT","UPDATE_PRODUCT","SET_PRODUCTS","Product","initialState","availableProducts","userProducts","filter","prod","ownerId","state","action","type","products","newProduct","productData","id","title","imageUrl","description","price","concat","productIndex","findIndex","pid","updatedProduct","updatedUserProducts","availableProductIndex","updatedAvailableProducts","product"],"mappings":"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","sourcesContent":["import PRODUCTS from '../../data/dummy-data';\r\nimport {\r\n  DELETE_PRODUCT,\r\n  CREATE_PRODUCT,\r\n  UPDATE_PRODUCT,\r\n  SET_PRODUCTS\r\n} from '../actions/products';\r\nimport Product from '../../models/product';\r\n\r\nconst initialState = {\r\n  availableProducts: PRODUCTS,\r\n  userProducts: PRODUCTS.filter(prod => prod.ownerId === 'u1')\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTS:\r\n      return {\r\n        availableProducts: action.products,\r\n        userProducts: action.userProducts\r\n      };\r\n    case CREATE_PRODUCT:\r\n      const newProduct = new Product(\r\n        action.productData.id,\r\n        action.productData.ownerId,\r\n        action.productData.title,\r\n        action.productData.imageUrl,\r\n        action.productData.description,\r\n        action.productData.price\r\n      );\r\n      return {\r\n        ...state,\r\n        availableProducts: state.availableProducts.concat(newProduct),\r\n        userProducts: state.userProducts.concat(newProduct)\r\n      };\r\n    case UPDATE_PRODUCT:\r\n      const productIndex = state.userProducts.findIndex(\r\n        prod => prod.id === action.pid\r\n      );\r\n      const updatedProduct = new Product(\r\n        action.pid,\r\n        state.userProducts[productIndex].ownerId,\r\n        action.productData.title,\r\n        action.productData.imageUrl,\r\n        action.productData.description,\r\n        state.userProducts[productIndex].price\r\n      );\r\n      const updatedUserProducts = [...state.userProducts];\r\n      updatedUserProducts[productIndex] = updatedProduct;\r\n      const availableProductIndex = state.availableProducts.findIndex(\r\n        prod => prod.id === action.pid\r\n      );\r\n      const updatedAvailableProducts = [...state.availableProducts];\r\n      updatedAvailableProducts[availableProductIndex] = updatedProduct;\r\n      return {\r\n        ...state,\r\n        availableProducts: updatedAvailableProducts,\r\n        userProducts: updatedUserProducts\r\n      };\r\n    case DELETE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        userProducts: state.userProducts.filter(\r\n          product => product.id !== action.pid\r\n        ),\r\n        availableProducts: state.availableProducts.filter(\r\n          product => product.id !== action.pid\r\n        )\r\n      };\r\n  }\r\n  return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}