{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\the-shop-app\\\\screens\\\\shop\\\\ProductsOverviewScreen.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport * as cartActions from \"../../store/actions/cart\";\nimport * as productsActions from \"../../store/actions/products\";\nimport Colors from \"../../constants/Colors\";\n\nvar ProductsOverviewScreen = function ProductsOverviewScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var products = useSelector(function (state) {\n    return state.products.availableProducts;\n  });\n  var dispatch = useDispatch();\n  var loadProducts = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsRefreshing(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(productsActions.fetchProducts()));\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n\n          case 10:\n            setIsRefreshing(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  }, [dispatch, setIsLoading, setError]);\n  useEffect(function () {\n    var willFocusSub = props.navigation.addListener('willFocus', loadProducts);\n    return function () {\n      willFocusSub.remove();\n    };\n  }, [loadProducts]);\n  useEffect(function () {\n    setIsLoading(true);\n    loadProducts().then(function () {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadProducts]);\n\n  var selectItemHandler = function selectItemHandler(id, title) {\n    props.navigation.navigate('ProductDetail', {\n      productId: id,\n      productTitle: title\n    });\n  };\n\n  if (error) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"An error occurred!\"), React.createElement(Button, {\n      title: \"Try again\",\n      onPress: loadProducts,\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (!isLoading && products.length === 0) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"No products found. Maybe start adding some!\"));\n  }\n\n  return React.createElement(FlatList, {\n    onRefresh: loadProducts,\n    refreshing: isRefreshing,\n    data: products,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(ProductItem, {\n        image: itemData.item.imageUrl,\n        title: itemData.item.title,\n        price: itemData.item.price,\n        onSelect: function onSelect() {\n          selectItemHandler(itemData.item.id, itemData.item.title);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        color: Colors.primary,\n        title: \"View Details\",\n        onPress: function onPress() {\n          selectItemHandler(itemData.item.id, itemData.item.title);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        color: Colors.primary,\n        title: \"To Cart\",\n        onPress: function onPress() {\n          dispatch(cartActions.addToCart(itemData.item));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  });\n};\n\nProductsOverviewScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'All Products',\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Menu\",\n        iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Cart\",\n        iconName: Platform.OS === 'android' ? 'md-cart' : 'ios-cart',\n        onPress: function onPress() {\n          navData.navigation.navigate('Cart');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default ProductsOverviewScreen;","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/the-shop-app/screens/shop/ProductsOverviewScreen.js"],"names":["React","useEffect","useState","useCallback","useSelector","useDispatch","HeaderButtons","Item","HeaderButton","ProductItem","cartActions","productsActions","Colors","ProductsOverviewScreen","props","isLoading","setIsLoading","isRefreshing","setIsRefreshing","error","setError","products","state","availableProducts","dispatch","loadProducts","fetchProducts","message","willFocusSub","navigation","addListener","remove","then","selectItemHandler","id","title","navigate","productId","productTitle","styles","centered","primary","length","item","itemData","imageUrl","price","addToCart","navigationOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React,{useEffect,useState, useCallback} from 'react';\r\nimport { View, FlatList, Platform ,Button, ActivityIndicator,StyleSheet,Text} from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\r\n\r\nimport HeaderButton from '../../components/UI/HeaderButton';\r\nimport ProductItem from '../../components/shop/ProductItem';\r\nimport * as cartActions from '../../store/actions/cart';\r\nimport * as productsActions from '../../store/actions/products';\r\nimport Colors from '../../constants/Colors';\r\n\r\n\r\nconst ProductsOverviewScreen = props => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [error, setError] = useState();\r\n  const products = useSelector(state => state.products.availableProducts);\r\n  const dispatch = useDispatch();\r\n\r\n  const loadProducts = useCallback(async () => {\r\n    setError(null);\r\n    setIsRefreshing(true);\r\n    try {\r\n      await dispatch(productsActions.fetchProducts());\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n    setIsRefreshing(false);\r\n  }, [dispatch, setIsLoading, setError]);\r\n\r\n  useEffect(() => {\r\n    const willFocusSub = props.navigation.addListener('willFocus', loadProducts) \r\n    return () => {\r\n      willFocusSub.remove();\r\n    };\r\n  }, [loadProducts]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    loadProducts().then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  }, [dispatch, loadProducts]);\r\n\r\n  const selectItemHandler = (id, title) => {\r\n    props.navigation.navigate('ProductDetail', {\r\n      productId: id,\r\n      productTitle: title\r\n    });\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <Text>An error occurred!</Text>\r\n        <Button\r\n          title=\"Try again\"\r\n          onPress={loadProducts}\r\n          color={Colors.primary}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <ActivityIndicator size=\"large\" color={Colors.primary} />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!isLoading && products.length === 0) {\r\n    return (\r\n      <View style={styles.centered}>\r\n        <Text>No products found. Maybe start adding some!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FlatList\r\n      onRefresh={loadProducts}\r\n      refreshing={isRefreshing}\r\n      data={products}\r\n      keyExtractor={item => item.id}\r\n      renderItem={itemData => (\r\n        <ProductItem\r\n          image={itemData.item.imageUrl}\r\n          title={itemData.item.title}\r\n          price={itemData.item.price}\r\n          onSelect={() => {\r\n            selectItemHandler(itemData.item.id, itemData.item.title);\r\n          }}\r\n        >\r\n          <Button\r\n            color={Colors.primary}\r\n            title=\"View Details\"\r\n            onPress={() => {\r\n              selectItemHandler(itemData.item.id, itemData.item.title);\r\n            }}\r\n          />\r\n          <Button\r\n            color={Colors.primary}\r\n            title=\"To Cart\"\r\n            onPress={() => {\r\n              dispatch(cartActions.addToCart(itemData.item));\r\n            }}\r\n          />\r\n        </ProductItem>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nProductsOverviewScreen.navigationOptions = navData => {\r\n  return {\r\n    headerTitle: 'All Products',\r\n    headerLeft: () => (\r\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\r\n        <Item\r\n          title=\"Menu\"\r\n          iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\r\n          onPress={() => {\r\n            navData.navigation.toggleDrawer();\r\n          }}\r\n        />\r\n      </HeaderButtons>\r\n    ),\r\n    headerRight: () => (\r\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\r\n        <Item\r\n          title=\"Cart\"\r\n          iconName={Platform.OS === 'android' ? 'md-cart' : 'ios-cart'}\r\n          onPress={() => {\r\n            navData.navigation.navigate('Cart');\r\n          }}\r\n        />\r\n      </HeaderButtons>\r\n    )\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centered: { flex: 1, justifyContent: 'center', alignItems: 'center' }\r\n});\r\n\r\nexport default ProductsOverviewScreen;\r\n"]},"metadata":{},"sourceType":"module"}