{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\the-shop-app\\\\screens\\\\user\\\\AuthScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, useCallback, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useDispatch } from 'react-redux';\nimport Input from \"../../components/UI/Input\";\nimport Card from \"../../components/UI/Card\";\nimport Colors from \"../../constants/Colors\";\nimport * as authActions from \"../../store/actions/auth\";\nvar FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread({}, state.inputValues, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread({}, state.inputValidities, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n\n  ;\n  return state;\n};\n\nvar AuthScreen = function AuthScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignup = _useState2[0],\n      seIsSignup = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      email: '',\n      password: ''\n    },\n    inputValidities: {\n      email: false,\n      password: false\n    },\n    formIsValid: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  var signupHandler = function signupHandler() {\n    dispatch(authActions.signup(formState.inputValues.email, formState.inputValues.password));\n  };\n\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    keyboardVerticalOffset: 50,\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#ffedff', '#ffe3ff'],\n    style: styles.gradient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Card, {\n    style: styles.authContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, React.createElement(Input, {\n    id: \"e-mail\",\n    label: \"E-Mail\",\n    keyboardType: \"email-address\",\n    required: true,\n    email: true,\n    autoCapitalize: \"none\",\n    errorText: \"Please enter valid email address\",\n    onInputChange: inputChangeHandler,\n    initialValue: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }), React.createElement(Input, {\n    id: \"password\",\n    label: \"Password\",\n    keyboardType: \"default\",\n    secureTextEntry: true,\n    required: true,\n    minLength: 5,\n    autoCapitalize: \"none\",\n    errorText: \"Please enter valid password\",\n    onInputChange: inputChangeHandler,\n    initialValue: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    title: \"Login\",\n    color: Colors.primary,\n    onPress: signupHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    title: \"Switch to Sign Up\",\n    color: Colors.accent,\n    onPress: function onPress() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nAuthScreen.navigationOptions = {\n  headerTitle: 'Authenticate'\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  gradient: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  authContainer: {\n    width: '80%',\n    maxWidth: 400,\n    maxHeight: 400,\n    padding: 20\n  },\n  buttonContainer: {\n    marginTop: 10\n  }\n});\nexport default AuthScreen;","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/the-shop-app/screens/user/AuthScreen.js"],"names":["React","useReducer","useCallback","useState","LinearGradient","useDispatch","Input","Card","Colors","authActions","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","AuthScreen","props","isSignup","seIsSignup","dispatch","email","password","formState","dispatchFormState","signupHandler","signup","inputChangeHandler","inputIdentifier","inputValue","inputValidity","styles","screen","gradient","authContainer","buttonContainer","primary","accent","navigationOptions","headerTitle","StyleSheet","create","flex","justifyContent","alignItems","width","maxWidth","maxHeight","padding","marginTop"],"mappings":"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","sourcesContent":["import React,{useReducer,useCallback,useState} from 'react';\r\nimport {ScrollView,View,KeyboardAvoidingView,StyleSheet,Button} from 'react-native';\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport Input from '../../components/UI/Input';\r\nimport Card from '../../components/UI/Card';\r\nimport Colors from '../../constants/Colors';\r\nimport * as authActions from '../../store/actions/auth';\r\n\r\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\r\n\r\nconst formReducer = (state, action) => {\r\n    if(action.type === FORM_INPUT_UPDATE ) {\r\n      const updatedValues = {\r\n        ...state.inputValues,\r\n        [action.input]: action.value\r\n      };\r\n      const updatedValidities= {\r\n        ...state.inputValidities,\r\n        [action.input]: action.isValid\r\n      };\r\n      let updatedFormIsValid = true;\r\n      for(const key in updatedValidities) {\r\n        updatedFormIsValid = updatedFormIsValid &&updatedValidities[key];\r\n      }\r\n      return {\r\n        formIsValid: updatedFormIsValid,\r\n        inputValidities: updatedValidities,\r\n        inputValues: updatedValues\r\n      };\r\n    };\r\n    return state;\r\n  };\r\n\r\nconst AuthScreen = props => {\r\n    const [isSignup, seIsSignup] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const [formState, dispatchFormState] = useReducer(formReducer, {\r\n        inputValues: {\r\n         email: '',\r\n         password: ''\r\n        }, \r\n        inputValidities:{\r\n          email: false,\r\n          password: false\r\n        },\r\n        formIsValid: false \r\n      })\r\n    \r\n\r\n    const signupHandler = () =>{\r\n        dispatch(authActions.signup(formState.inputValues.email, formState.inputValues.password));\r\n    }\r\n\r\n    const inputChangeHandler = useCallback((inputIdentifier, inputValue, inputValidity) => {\r\n        dispatchFormState({\r\n          type: FORM_INPUT_UPDATE, \r\n          value: inputValue, \r\n          isValid: inputValidity,\r\n          input: inputIdentifier\r\n        });\r\n      }, [dispatchFormState]);\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior=\"padding\"\r\n            keyboardVerticalOffset={50}\r\n            style={styles.screen}>\r\n            <LinearGradient colors={['#ffedff', '#ffe3ff']} style={styles.gradient} >\r\n                <Card style={styles.authContainer}>\r\n                    <ScrollView>\r\n                        <Input \r\n                            id=\"e-mail\" \r\n                            label=\"E-Mail\" \r\n                            keyboardType=\"email-address\"\r\n                            required\r\n                            email\r\n                            autoCapitalize=\"none\"\r\n                            errorText=\"Please enter valid email address\"\r\n                            onInputChange={inputChangeHandler}\r\n                            initialValue=\"\" />\r\n                        <Input \r\n                            id=\"password\" \r\n                            label=\"Password\" \r\n                            keyboardType=\"default\"\r\n                            secureTextEntry\r\n                            required\r\n                            minLength={5}\r\n                            autoCapitalize=\"none\"\r\n                            errorText=\"Please enter valid password\"\r\n                            onInputChange={inputChangeHandler}\r\n                            initialValue=\"\" />\r\n                        <View  style={styles.buttonContainer}>\r\n                            <Button title=\"Login\" color={Colors.primary} onPress={signupHandler} />\r\n                        </View>    \r\n                        <View style={styles.buttonContainer}>\r\n                            <Button title=\"Switch to Sign Up\" color={Colors.accent} onPress={() => {}} />\r\n                        </View>\r\n                        \r\n                    </ScrollView>\r\n                </Card>\r\n            </LinearGradient>\r\n        </KeyboardAvoidingView>\r\n    );\r\n};\r\n\r\nAuthScreen.navigationOptions = {\r\n    headerTitle: 'Authenticate'\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n    },\r\n    gradient: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    authContainer: {\r\n        width: '80%',\r\n        maxWidth: 400,\r\n        maxHeight: 400,\r\n        padding: 20\r\n    },\r\n    buttonContainer: {\r\n        marginTop: 10\r\n    }\r\n});\r\n\r\nexport default AuthScreen;"]},"metadata":{},"sourceType":"module"}