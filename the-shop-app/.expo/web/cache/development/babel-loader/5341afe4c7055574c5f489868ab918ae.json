{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\the-shop-app\\\\screens\\\\user\\\\UserProductsScreen.js\";\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport ProductItem from \"../../components/shop/ProductItem\";\nimport Colors from \"../../constants/Colors\";\nimport * as productsActions from \"../../store/actions/products\";\n\nvar UserProductsScreen = function UserProductsScreen(props) {\n  var userProducts = useSelector(function (state) {\n    return state.products.userProducts;\n  });\n  var dispatch = useDispatch();\n\n  var editProductHandler = function editProductHandler(id) {\n    props.navigation.navigate('EditProduct', {\n      productId: id\n    });\n  };\n\n  var deleteHandler = function deleteHandler(id) {\n    Alert.alert('Are you sure?', 'Do you really want to delete this item?', [{\n      text: 'No',\n      style: 'default'\n    }, {\n      text: 'Yes',\n      style: 'destructive',\n      onPress: function onPress() {\n        dispatch(productsActions.deleteProduct(id));\n      }\n    }]);\n  };\n\n  return React.createElement(FlatList, {\n    data: userProducts,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(ProductItem, {\n        image: itemData.item.imageUrl,\n        title: itemData.item.title,\n        price: itemData.item.price,\n        onSelect: function onSelect() {\n          editProductHandler(itemData.item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        color: Colors.primary,\n        title: \"Edit\",\n        onPress: function onPress() {\n          editProductHandler(itemData.item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        color: Colors.primary,\n        title: \"Delete\",\n        onPress: deleteHandler.bind(_this, itemData.item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n};\n\nUserProductsScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Your Products',\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Menu\",\n        iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: HeaderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        title: \"Add\",\n        iconName: Platform.OS === 'android' ? 'md-create' : 'ios-create',\n        onPress: function onPress() {\n          navData.navigation.navigate('EditProduct');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nexport default UserProductsScreen;","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/the-shop-app/screens/user/UserProductsScreen.js"],"names":["React","useSelector","useDispatch","HeaderButtons","Item","HeaderButton","ProductItem","Colors","productsActions","UserProductsScreen","props","userProducts","state","products","dispatch","editProductHandler","id","navigation","navigate","productId","deleteHandler","Alert","alert","text","style","onPress","deleteProduct","item","itemData","imageUrl","title","price","primary","bind","navigationOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FlatList, Button, Platform,Alert } from 'react-native';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\r\n\r\nimport HeaderButton from '../../components/UI/HeaderButton';\r\nimport ProductItem from '../../components/shop/ProductItem';\r\nimport Colors from '../../constants/Colors';\r\nimport * as productsActions from '../../store/actions/products';\r\n\r\nconst UserProductsScreen = props => {\r\n  const userProducts = useSelector(state => state.products.userProducts);\r\n  const dispatch = useDispatch();\r\n\r\n  const editProductHandler = id => {\r\n    props.navigation.navigate('EditProduct', { productId: id });\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    Alert.alert('Are you sure?', 'Do you really want to delete this item?', [\r\n      { text: 'No', style: 'default' },\r\n      {\r\n        text: 'Yes',\r\n        style: 'destructive',\r\n        onPress: () => {\r\n          dispatch(productsActions.deleteProduct(id));\r\n        }\r\n      }\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <FlatList\r\n      data={userProducts}\r\n      keyExtractor={item => item.id}\r\n      renderItem={itemData => (\r\n        <ProductItem\r\n          image={itemData.item.imageUrl}\r\n          title={itemData.item.title}\r\n          price={itemData.item.price}\r\n          onSelect={() => {\r\n            editProductHandler(itemData.item.id);\r\n          }}\r\n        >\r\n          <Button\r\n            color={Colors.primary}\r\n            title=\"Edit\"\r\n            onPress={() => {\r\n              editProductHandler(itemData.item.id);\r\n            }}\r\n          />\r\n          <Button\r\n            color={Colors.primary}\r\n            title=\"Delete\"\r\n            onPress={deleteHandler.bind(this, itemData.item.id)}\r\n          />\r\n        </ProductItem>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nUserProductsScreen.navigationOptions = navData => {\r\n  return {\r\n    headerTitle: 'Your Products',\r\n    headerLeft: () => (\r\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\r\n        <Item\r\n          title=\"Menu\"\r\n          iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\r\n          onPress={() => {\r\n            navData.navigation.toggleDrawer();\r\n          }}\r\n        />\r\n      </HeaderButtons>\r\n    ),\r\n    headerRight: () => (\r\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\r\n        <Item\r\n          title=\"Add\"\r\n          iconName={Platform.OS === 'android' ? 'md-create' : 'ios-create'}\r\n          onPress={() => {\r\n            navData.navigation.navigate('EditProduct');\r\n          }}\r\n        />\r\n      </HeaderButtons>\r\n    )\r\n  };\r\n};\r\n\r\nexport default UserProductsScreen;"]},"metadata":{},"sourceType":"module"}