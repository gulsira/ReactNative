{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\meals-app\\\\screens\\\\CategoryMealsScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useSelector } from 'react-redux';\nimport { CATEGORIES } from \"../data/dummy-data\";\nimport MealList from \"../components/MealList\";\n\nvar CategoryMealScreen = function CategoryMealScreen(props) {\n  var catId = props.navigation.getParam('categoryId');\n  var availableMeals = useSelector(function (state) {\n    return state.meals.filteredMeals;\n  });\n  var displayedMeals = availableMeals.filter(function (meal) {\n    return meal.categoryIds.indexOf(catId) >= 0;\n  });\n\n  if (displayedMeals.length === 0) {\n    return React.createElement(View, {\n      style: styles.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"No meals found, maybe check your filters?\"));\n  }\n\n  return React.createElement(MealList, {\n    listData: displayedMeals,\n    navigation: props.navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  });\n};\n\nCategoryMealScreen.navigationOptions = function (navigationData) {\n  var catId = navigationData.navigation.getParam('categoryId');\n  var selectedCategory = CATEGORIES.find(function (cat) {\n    return cat.id === catId;\n  });\n  return {\n    headerTitle: selectedCategory.title\n  };\n};\n\nvar styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default CategoryMealScreen;","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/meals-app/screens/CategoryMealsScreen.js"],"names":["React","useSelector","CATEGORIES","MealList","CategoryMealScreen","props","catId","navigation","getParam","availableMeals","state","meals","filteredMeals","displayedMeals","filter","meal","categoryIds","indexOf","length","styles","content","navigationOptions","navigationData","selectedCategory","find","cat","id","headerTitle","title","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,UAAT;AACA,OAAOC,QAAP;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAClC,MAAMC,KAAK,GAAGD,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0B,YAA1B,CAAd;AAEA,MAAMC,cAAc,GAAGR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAN,CAAYC,aAAhB;AAAA,GAAN,CAAlC;AAEA,MAAMC,cAAc,GAAGJ,cAAc,CAACK,MAAf,CACrB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,WAAL,CAAiBC,OAAjB,CAAyBX,KAAzB,KAAmC,CAAvC;AAAA,GADiB,CAAvB;;AAIA,MAAIO,cAAc,CAACK,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,CADF;AAKD;;AAED,SAAO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEP,cAApB;AAAoC,IAAA,UAAU,EAAER,KAAK,CAACE,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAlBD;;AAoBAH,kBAAkB,CAACiB,iBAAnB,GAAuC,UAAAC,cAAc,EAAI;AACvD,MAAMhB,KAAK,GAAGgB,cAAc,CAACf,UAAf,CAA0BC,QAA1B,CAAmC,YAAnC,CAAd;AAEA,MAAMe,gBAAgB,GAAGrB,UAAU,CAACsB,IAAX,CAAgB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,EAAJ,KAAWpB,KAAf;AAAA,GAAnB,CAAzB;AAEA,SAAO;AACLqB,IAAAA,WAAW,EAAEJ,gBAAgB,CAACK;AADzB,GAAP;AAGD,CARD;;AAUA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,OAAO,EAAE;AACPW,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL;AADsB,CAAlB,CAAf;AAQA,eAAe7B,kBAAf","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet,Text } from 'react-native';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { CATEGORIES } from '../data/dummy-data';\r\nimport MealList from '../components/MealList';\r\n\r\n\r\nconst CategoryMealScreen = props => {\r\n  const catId = props.navigation.getParam('categoryId');\r\n\r\n  const availableMeals = useSelector(state => state.meals.filteredMeals);\r\n\r\n  const displayedMeals = availableMeals.filter(\r\n    meal => meal.categoryIds.indexOf(catId) >= 0\r\n  );\r\n\r\n  if (displayedMeals.length === 0) {\r\n    return (\r\n      <View style={styles.content}>\r\n        <Text>No meals found, maybe check your filters?</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return <MealList listData={displayedMeals} navigation={props.navigation} />;\r\n};\r\n\r\nCategoryMealScreen.navigationOptions = navigationData => {\r\n  const catId = navigationData.navigation.getParam('categoryId');\r\n\r\n  const selectedCategory = CATEGORIES.find(cat => cat.id === catId);\r\n\r\n  return {\r\n    headerTitle: selectedCategory.title\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nexport default CategoryMealScreen;"]},"metadata":{},"sourceType":"module"}