{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\meals-app\\\\App.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppLoading } from 'expo';\nimport { useScreens } from 'react-native-screens';\nimport MealsNavigator from \"./navigation/MealsNavigator\";\nuseScreens();\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(MealsNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/meals-app/App.js"],"names":["React","useState","AppLoading","useScreens","MealsNavigator","App","fontLoaded","setFontLoaded"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAOC,cAAP;AAEAD,UAAU;AAGV,eAAe,SAASE,GAAT,GAAe;AAAA,kBACQJ,QAAQ,CAAC,KAAD,CADhB;AAAA;AAAA,MACrBK,UADqB;AAAA,MACTC,aADS;;AAG5B,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE;AAAA,eAAMC,aAAa,CAAC,IAAD,CAAnB;AAAA,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AAED,SAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, { useState } from 'react';\nimport { Text, View } from 'react-native';\nimport { AppLoading } from 'expo';\nimport { useScreens } from 'react-native-screens';\n\nimport MealsNavigator from './navigation/MealsNavigator';\n\nuseScreens();\n\n\nexport default function App() {\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        onFinish={() => setFontLoaded(true)}\n      />\n    );\n  }\n\n  return <MealsNavigator />;\n}\n"]},"metadata":{},"sourceType":"module"}