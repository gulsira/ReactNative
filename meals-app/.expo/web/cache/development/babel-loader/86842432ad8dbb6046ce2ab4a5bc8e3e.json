{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\meals-app\\\\screens\\\\FiltersScreen.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useDispatch } from 'react-redux';\nimport HeaderButton from \"../components/HeaderButton\";\nimport Colors from \"../constants/Colors\";\nimport { setFilters } from \"../store/actions/meals\";\n\nvar FilterSwitch = function FilterSwitch(props) {\n  return React.createElement(View, {\n    style: styles.filterContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, props.label), React.createElement(Switch, {\n    trackColor: {\n      true: Colors.primaryColor\n    },\n    thumbColor: Platform.OS === 'android' ? Colors.primaryColor : '',\n    value: props.state,\n    onValueChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar FiltersScreen = function FiltersScreen(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGlutenFree = _useState2[0],\n      setIsGlutenFree = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLactoseFree = _useState4[0],\n      setIsLactoseFree = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isVegan = _useState6[0],\n      setIsVegan = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isVegetarian = _useState8[0],\n      setIsVegetarian = _useState8[1];\n\n  var dispatch = useDispatch();\n  var saveFilters = useCallback(function () {\n    var appliedFilters = {\n      glutenFree: isGlutenFree,\n      lactoseFree: isLactoseFree,\n      vegan: isVegan,\n      vegetarian: isVegetarian\n    };\n    dispatch(setFilters(appliedFilters));\n  }, [isGlutenFree, isLactoseFree, isVegan, isVegetarian, dispatch]);\n  useEffect(function () {\n    navigation.setParams({\n      save: saveFilters\n    });\n  }, [saveFilters]);\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Available Filters / Restrictions\"), React.createElement(FilterSwitch, {\n    label: \"Gluten-free\",\n    state: isGlutenFree,\n    onChange: function onChange(newValue) {\n      return setIsGlutenFree(newValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Lactose-free\",\n    state: isLactoseFree,\n    onChange: function onChange(newValue) {\n      return setIsLactoseFree(newValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Vegan\",\n    state: isVegan,\n    onChange: function onChange(newValue) {\n      return setIsVegan(newValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(FilterSwitch, {\n    label: \"Vegetarian\",\n    state: isVegetarian,\n    onChange: function onChange(newValue) {\n      return setIsVegetarian(newValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nFiltersScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Filter Meals',\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    })),\n    headerRight: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Save\",\n      iconName: \"ios-save\",\n      onPress: navData.navigation.getParam('save'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 22,\n    margin: 20,\n    textAlign: 'center'\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '80%',\n    marginVertical: 15\n  }\n});\nexport default FiltersScreen;","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/meals-app/screens/FiltersScreen.js"],"names":["React","useState","useEffect","useCallback","HeaderButtons","Item","useDispatch","HeaderButton","Colors","setFilters","FilterSwitch","props","styles","filterContainer","label","true","primaryColor","Platform","OS","state","onChange","FiltersScreen","navigation","isGlutenFree","setIsGlutenFree","isLactoseFree","setIsLactoseFree","isVegan","setIsVegan","isVegetarian","setIsVegetarian","dispatch","saveFilters","appliedFilters","glutenFree","lactoseFree","vegan","vegetarian","setParams","save","screen","title","newValue","navigationOptions","navData","headerTitle","headerLeft","toggleDrawer","headerRight","getParam","StyleSheet","create","flex","alignItems","fontSize","margin","textAlign","flexDirection","justifyContent","width","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { View, Text, StyleSheet, Switch, Platform } from 'react-native';\r\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport HeaderButton from '../components/HeaderButton';\r\nimport Colors from '../constants/Colors';\r\nimport { setFilters } from '../store/actions/meals';\r\n\r\nconst FilterSwitch = props => {\r\n  return (\r\n    <View style={styles.filterContainer}>\r\n      <Text>{props.label}</Text>\r\n      <Switch\r\n        trackColor={{ true: Colors.primaryColor }}\r\n        thumbColor={Platform.OS === 'android' ? Colors.primaryColor : ''}\r\n        value={props.state}\r\n        onValueChange={props.onChange}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst FiltersScreen = props => {\r\n  const { navigation } = props;\r\n\r\n  const [isGlutenFree, setIsGlutenFree] = useState(false);\r\n  const [isLactoseFree, setIsLactoseFree] = useState(false);\r\n  const [isVegan, setIsVegan] = useState(false);\r\n  const [isVegetarian, setIsVegetarian] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const saveFilters = useCallback(() => {\r\n    const appliedFilters = {\r\n      glutenFree: isGlutenFree,\r\n      lactoseFree: isLactoseFree,\r\n      vegan: isVegan,\r\n      vegetarian: isVegetarian\r\n    };\r\n\r\n    dispatch(setFilters(appliedFilters));\r\n  }, [isGlutenFree, isLactoseFree, isVegan, isVegetarian, dispatch]);\r\n\r\n  useEffect(() => {\r\n    navigation.setParams({ save: saveFilters });\r\n  }, [saveFilters]);\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Text style={styles.title}>Available Filters / Restrictions</Text>\r\n      <FilterSwitch\r\n        label=\"Gluten-free\"\r\n        state={isGlutenFree}\r\n        onChange={newValue => setIsGlutenFree(newValue)}\r\n      />\r\n      <FilterSwitch\r\n        label=\"Lactose-free\"\r\n        state={isLactoseFree}\r\n        onChange={newValue => setIsLactoseFree(newValue)}\r\n      />\r\n      <FilterSwitch\r\n        label=\"Vegan\"\r\n        state={isVegan}\r\n        onChange={newValue => setIsVegan(newValue)}\r\n      />\r\n      <FilterSwitch\r\n        label=\"Vegetarian\"\r\n        state={isVegetarian}\r\n        onChange={newValue => setIsVegetarian(newValue)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nFiltersScreen.navigationOptions = navData => {\r\n  return {\r\n    headerTitle: 'Filter Meals',\r\n    headerLeft: (\r\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\r\n        <Item\r\n          title=\"Menu\"\r\n          iconName=\"ios-menu\"\r\n          onPress={() => {\r\n            navData.navigation.toggleDrawer();\r\n          }}\r\n        />\r\n      </HeaderButtons>\r\n    ),\r\n    headerRight: (\r\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\r\n        <Item\r\n          title=\"Save\"\r\n          iconName=\"ios-save\"\r\n          onPress={navData.navigation.getParam('save')}\r\n        />\r\n      </HeaderButtons>\r\n    )\r\n  };\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    margin: 20,\r\n    textAlign: 'center'\r\n  },\r\n  filterContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    width: '80%',\r\n    marginVertical: 15\r\n  }\r\n});\r\n\r\nexport default FiltersScreen;\r\n"]},"metadata":{},"sourceType":"module"}