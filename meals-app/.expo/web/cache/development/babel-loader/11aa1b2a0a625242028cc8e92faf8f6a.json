{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\meals-app\\\\navigation\\\\MealsNavigator.js\";\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createMaterialBottomTabNavigator } from 'react-navigation-material-bottom-tabs';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nimport CategoriesScreen from \"../screens/CategoriesScreen\";\nimport CategoryMealsScreen from \"../screens/CategoryMealsScreen\";\nimport MealDetailScreen from \"../screens/MealDetailScreen\";\nimport Colors from \"../constants/Colors\";\nimport FavoritesScreen from \"../screens/FavoritesScreen\";\nimport FiltersScreen from \"../screens/FiltersScreen\";\nvar defaultStackNavOptions = {\n  headerStyle: {\n    backgroundColor: Platform.OS === 'android' ? Colors.primaryColor : ''\n  },\n  headerTintColor: Platform.OS === 'android' ? 'white' : Colors.primaryColor,\n  headerTitle: 'A Screen'\n};\nvar MealsNavigator = createStackNavigator({\n  Categories: {\n    screen: CategoriesScreen\n  },\n  CategoryMeals: {\n    screen: CategoryMealsScreen\n  },\n  MealDetail: MealDetailScreen\n}, {\n  defaultNavigationOptions: defaultStackNavOptions\n});\nvar FavNavigator = createStackNavigator({\n  Favorites: FavoritesScreen,\n  MealDetail: MealDetailScreen\n}, {\n  defaultNavigationOptions: defaultStackNavOptions\n});\nvar tabScreenConfig = {\n  Meals: {\n    screen: MealsNavigator,\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(tabInfo) {\n        return React.createElement(Ionicons, {\n          name: \"ios-restaurant\",\n          size: 25,\n          color: tabInfo.tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        });\n      },\n      tabBarColor: Colors.primaryColor,\n      tabBarLabel: Platform.OS === 'android' ? React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 48\n        }\n      }, \"Meals\") : 'Meals'\n    }\n  },\n  Favorites: {\n    screen: FavNavigator,\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(tabInfo) {\n        return React.createElement(Ionicons, {\n          name: \"ios-star\",\n          size: 25,\n          color: tabInfo.tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 16\n          }\n        });\n      },\n      tabBarColor: Colors.accentColor,\n      tabBarLabel: Platform.OS === 'android' ? React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 48\n        }\n      }, \"Favorites\") : 'Favorites'\n    }\n  }\n};\nvar MealsFavTabNavigator = Platform.OS === 'android' ? createMaterialBottomTabNavigator(tabScreenConfig, {\n  activeTintColor: 'white',\n  shifting: true,\n  barStyle: {\n    backgroundColor: Colors.primaryColor\n  }\n}) : createBottomTabNavigator(tabScreenConfig, {\n  tabBarOptions: {\n    activeTintColor: Colors.accentColor\n  }\n});\nvar FiltersNavigator = createStackNavigator({\n  Filters: FiltersScreen\n}, {\n  defaultNavigationOptions: defaultStackNavOptions\n});\nvar MainNavigator = createDrawerNavigator({\n  MealsFavs: {\n    screen: MealsFavTabNavigator,\n    navigationOptions: {\n      drawerLabel: 'Meals'\n    }\n  },\n  Filters: FiltersNavigator\n}, {\n  contentOptions: {\n    activeTintColor: Colors.accentColor\n  }\n});\nexport default createAppContainer(MainNavigator);","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/meals-app/navigation/MealsNavigator.js"],"names":["React","createStackNavigator","createAppContainer","createBottomTabNavigator","Ionicons","createMaterialBottomTabNavigator","createDrawerNavigator","CategoriesScreen","CategoryMealsScreen","MealDetailScreen","Colors","FavoritesScreen","FiltersScreen","defaultStackNavOptions","headerStyle","backgroundColor","Platform","OS","primaryColor","headerTintColor","headerTitle","MealsNavigator","Categories","screen","CategoryMeals","MealDetail","defaultNavigationOptions","FavNavigator","Favorites","tabScreenConfig","Meals","navigationOptions","tabBarIcon","tabInfo","tintColor","tabBarColor","tabBarLabel","accentColor","MealsFavTabNavigator","activeTintColor","shifting","barStyle","tabBarOptions","FiltersNavigator","Filters","MainNavigator","MealsFavs","drawerLabel","contentOptions"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Platform,Text} from 'react-native';\r\nimport {createStackNavigator} from 'react-navigation-stack';\r\nimport {createAppContainer} from 'react-navigation';\r\nimport {createBottomTabNavigator} from 'react-navigation-tabs';\r\nimport {Ionicons} from '@expo/vector-icons'; \r\nimport {createMaterialBottomTabNavigator} from 'react-navigation-material-bottom-tabs';\r\nimport { createDrawerNavigator } from 'react-navigation-drawer';\r\n\r\n\r\nimport CategoriesScreen from '../screens/CategoriesScreen';\r\nimport CategoryMealsScreen from '../screens/CategoryMealsScreen';\r\nimport MealDetailScreen from '../screens/MealDetailScreen';\r\nimport Colors from '../constants/Colors';\r\nimport FavoritesScreen from '../screens/FavoritesScreen';\r\nimport FiltersScreen from '../screens/FiltersScreen';\r\n\r\nconst defaultStackNavOptions = {\r\n  headerStyle: {\r\n    backgroundColor: Platform.OS === 'android' ? Colors.primaryColor : ''\r\n  },\r\n  headerTintColor: Platform.OS === 'android' ? 'white' : Colors.primaryColor,\r\n  headerTitle: 'A Screen'\r\n};\r\n\r\nconst MealsNavigator = createStackNavigator(\r\n  {\r\n    Categories: {\r\n      screen: CategoriesScreen\r\n    },\r\n    CategoryMeals: {\r\n      screen: CategoryMealsScreen\r\n    },\r\n    MealDetail: MealDetailScreen\r\n  },\r\n  {\r\n    // initialRouteName: 'Categories',\r\n    defaultNavigationOptions: defaultStackNavOptions\r\n  }\r\n);\r\n\r\nconst FavNavigator = createStackNavigator(\r\n  {\r\n    Favorites: FavoritesScreen,\r\n    MealDetail: MealDetailScreen\r\n  },\r\n  {\r\n    // initialRouteName: 'Categories',\r\n    defaultNavigationOptions: defaultStackNavOptions\r\n  }\r\n);\r\n\r\nconst tabScreenConfig = {\r\n  Meals: {\r\n    screen: MealsNavigator,\r\n    navigationOptions: {\r\n      tabBarIcon: tabInfo => {\r\n        return (\r\n          <Ionicons name=\"ios-restaurant\" size={25} color={tabInfo.tintColor} />\r\n        );\r\n      },\r\n      tabBarColor: Colors.primaryColor,\r\n      tabBarLabel: Platform.OS === 'android' ? <Text>Meals</Text> : 'Meals' \r\n    }\r\n  },\r\n  Favorites: {\r\n    screen: FavNavigator,\r\n    navigationOptions: {\r\n      tabBarIcon: tabInfo => {\r\n        return <Ionicons name=\"ios-star\" size={25} color={tabInfo.tintColor} />; \r\n      },\r\n      tabBarColor: Colors.accentColor,\r\n      tabBarLabel: Platform.OS === 'android' ? <Text>Favorites</Text> : 'Favorites' \r\n    }\r\n  }\r\n};\r\n\r\nconst MealsFavTabNavigator =\r\n  Platform.OS === 'android'\r\n    ? createMaterialBottomTabNavigator(tabScreenConfig, {\r\n        activeTintColor: 'white',\r\n        shifting: true,\r\n        barStyle: {\r\n          backgroundColor: Colors.primaryColor\r\n        }\r\n      })\r\n    : createBottomTabNavigator(tabScreenConfig, {\r\n        tabBarOptions: {\r\n          activeTintColor: Colors.accentColor\r\n        }\r\n      });\r\n\r\nconst FiltersNavigator = createStackNavigator(\r\n  {\r\n    Filters: FiltersScreen\r\n  },\r\n  {\r\n    // navigationOptions: {\r\n    //   drawerLabel: 'Filters!!!!'\r\n    // },\r\n    defaultNavigationOptions: defaultStackNavOptions\r\n  }\r\n);\r\n\r\nconst MainNavigator = createDrawerNavigator(\r\n  {\r\n    MealsFavs: {\r\n      screen: MealsFavTabNavigator,\r\n      navigationOptions: {\r\n        drawerLabel: 'Meals'\r\n      }\r\n    },\r\n    Filters: FiltersNavigator\r\n  },\r\n  {\r\n    contentOptions: {\r\n      activeTintColor: Colors.accentColor\r\n    }\r\n  }\r\n);\r\n\r\nexport default createAppContainer(MainNavigator); "]},"metadata":{},"sourceType":"module"}