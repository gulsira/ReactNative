{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulsi\\\\Desktop\\\\NodeReact\\\\React Native\\\\meals-app\\\\screens\\\\MealDetailScreen.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport HeaderButton from \"../components/HeaderButton\";\nimport { toggleFavorite } from \"../store/actions/meals\";\n\nvar ListItem = function ListItem(props) {\n  return React.createElement(View, {\n    style: styles.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, props.children));\n};\n\nvar MealDetailScreen = function MealDetailScreen(props) {\n  var availableMeals = useSelector(function (state) {\n    return state.meals.meals;\n  });\n  var mealId = props.navigation.getParam('mealId');\n  var selectedMeal = availableMeals.find(function (meal) {\n    return meal.id === mealId;\n  });\n  var dispatch = useDispatch();\n  var toggleFavoriteHandler = useCallback(function () {\n    dispatch(toggleFavorite(mealId));\n  }, [dispatch, mealId]);\n  useEffect(function () {\n    props.navigation.setParams({\n      toggleFav: toggleFavoriteHandler\n    });\n  }, [toggleFavoriteHandler]);\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: selectedMeal.imageUrl\n    },\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, selectedMeal.duration, \" m \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, selectedMeal.complexity.toUpperCase()), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, selectedMeal.affordability.toUpperCase())), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Ingredients\"), selectedMeal.ingredients.map(function (ingredient) {\n    return React.createElement(ListItem, {\n      key: ingredient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, ingredient);\n  }), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Steps\"), selectedMeal.steps.map(function (step) {\n    return React.createElement(ListItem, {\n      key: step,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, step);\n  }));\n};\n\nMealDetailScreen.navigationOptions = function (navigationData) {\n  var mealTitle = navigationData.navigation.getParam('mealTitle');\n  var toggleFavorite = navigationData.navigation.getParam('toggleFav');\n  return {\n    headerTitle: mealTitle,\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, React.createElement(Item, {\n        title: \"Favorite\",\n        iconName: \"staro\",\n        onPress: toggleFavorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: 200\n  },\n  details: {\n    flexDirection: 'row',\n    padding: 15,\n    justifyContent: 'space-around'\n  },\n  title: {\n    fontSize: 22,\n    textAlign: 'center'\n  },\n  listItem: {\n    marginVertical: 10,\n    marginHorizontal: 20,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default MealDetailScreen;","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/meals-app/screens/MealDetailScreen.js"],"names":["React","useEffect","useCallback","HeaderButtons","Item","useSelector","useDispatch","HeaderButton","toggleFavorite","ListItem","props","styles","listItem","children","MealDetailScreen","availableMeals","state","meals","mealId","navigation","getParam","selectedMeal","find","meal","id","dispatch","toggleFavoriteHandler","setParams","toggleFav","uri","imageUrl","image","details","duration","complexity","toUpperCase","affordability","title","ingredients","map","ingredient","steps","step","navigationOptions","navigationData","mealTitle","headerTitle","headerRight","StyleSheet","create","width","height","flexDirection","padding","justifyContent","fontSize","textAlign","marginVertical","marginHorizontal","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React,{useEffect,useCallback} from 'react';\r\nimport {View,Text,StyleSheet,ScrollView,Image} from 'react-native';\r\nimport {HeaderButtons, Item} from 'react-navigation-header-buttons';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\n\r\nimport HeaderButton from '../components/HeaderButton';\r\nimport {toggleFavorite} from '../store/actions/meals';\r\n\r\nconst ListItem = props => {\r\n    return (\r\n    <View style={styles.listItem}>\r\n        <Text>{props.children}</Text>\r\n    </View>\r\n    )}\r\n\r\nconst MealDetailScreen = props => {\r\n\r\n    const availableMeals = useSelector(state => state.meals.meals);\r\n    const mealId = props.navigation.getParam('mealId');\r\n\r\n    const selectedMeal = availableMeals.find(meal => meal.id === mealId);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const toggleFavoriteHandler = useCallback(() => {\r\n        dispatch(toggleFavorite(mealId));\r\n    }, [dispatch, mealId]);\r\n\r\n    useEffect(() => {\r\n        // props.navigation.setParams({mealTitle: selectedMeal.title});\r\n        props.navigation.setParams({toggleFav: toggleFavoriteHandler})\r\n    }, [toggleFavoriteHandler]);\r\n\r\n    \r\n\r\n    return(\r\n        <ScrollView>\r\n            <Image source={{uri:selectedMeal.imageUrl}} style={styles.image} />\r\n            <View style={styles.details}>\r\n                <Text>{selectedMeal.duration} m </Text>\r\n                <Text>{selectedMeal.complexity.toUpperCase()}</Text>\r\n                <Text>{selectedMeal.affordability.toUpperCase()}</Text>\r\n            </View>\r\n            <Text style={styles.title}>Ingredients</Text>\r\n            {selectedMeal.ingredients.map(ingredient => (\r\n                <ListItem key={ingredient}>{ingredient}</ListItem>\r\n            ))}\r\n            <Text style={styles.title}>Steps</Text>\r\n            {selectedMeal.steps.map(step => (\r\n                <ListItem key={step}>{step}</ListItem>\r\n            ))}\r\n        </ScrollView>\r\n\r\n    );\r\n};\r\n\r\nMealDetailScreen.navigationOptions = (navigationData) => {\r\n    // const mealId = navigationData.navigation.getParam('mealId');\r\n    const mealTitle= navigationData.navigation.getParam('mealTitle');\r\n    const toggleFavorite = navigationData.navigation.getParam('toggleFav');\r\n    //const selectedMeal = MEALS.find(meal => meal.id === mealId); \r\n    return {\r\n        headerTitle: mealTitle,\r\n        headerRight: () =>  <HeaderButtons>\r\n            <Item \r\n                title= 'Favorite' \r\n                iconName= 'staro' \r\n                onPress={toggleFavorite} \r\n            />\r\n        </HeaderButtons>\r\n    }\r\n} \r\n\r\nconst styles = StyleSheet.create({\r\n    image:{\r\n        width: '100%',\r\n        height: 200\r\n    },\r\n    details: {\r\n        flexDirection: 'row',\r\n        padding: 15,\r\n        justifyContent: 'space-around'\r\n    },\r\n    title: {\r\n        fontSize: 22,\r\n        textAlign: 'center'\r\n    },\r\n    listItem: {\r\n        marginVertical: 10,\r\n        marginHorizontal: 20,\r\n        borderColor: '#ccc',\r\n        borderWidth: 1,\r\n        padding: 10\r\n    }\r\n});\r\n\r\nexport default MealDetailScreen;\r\n"]},"metadata":{},"sourceType":"module"}