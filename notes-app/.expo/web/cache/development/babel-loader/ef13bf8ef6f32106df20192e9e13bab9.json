{"ast":null,"code":"import * as SQLite from 'expo-sqlite';\nvar db = SQLite.openDatabase('notes.db');\nexport var init = function init() {\n  var promise = new Promise(function (resolve, reject) {\n    db.transaction(function (tx) {\n      tx.executeSql('CREATE TABLE IF NOT EXISTS notes (id INTEGER PRIMARY KEY NOT NULL, note TEXT NOT NULL, imageUri TEXT);', [], function () {\n        resolve();\n      }, function (_, err) {\n        reject(err);\n      });\n    });\n  });\n  return promise;\n};\nexport var insertNote = function insertNote(note, imageUri) {\n  var promise = new Promise(function (resolve, reject) {\n    db.transaction(function (tx) {\n      tx.executeSql(\"INSERT INTO notes (note, imageUri) VALUES (?, ?);\", [note, imageUri], function (_, result) {\n        resolve(result);\n      }, function (_, err) {\n        reject(err);\n      });\n    });\n  });\n  return promise;\n};\nexport var fetchNotes = function fetchNotes() {\n  var promise = new Promise(function (resolve, reject) {\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT * FROM notes\", [], function (_, result) {\n        resolve(result);\n      }, function (_, err) {\n        reject(err);\n      });\n    });\n  });\n  return promise;\n};","map":{"version":3,"sources":["C:/Users/gulsi/Desktop/NodeReact/React Native/notes-app/helpers/db.js"],"names":["SQLite","db","openDatabase","init","promise","Promise","resolve","reject","transaction","tx","executeSql","_","err","insertNote","note","imageUri","result","fetchNotes"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AAEA,IAAMC,EAAE,GAAGD,MAAM,CAACE,YAAP,CAAoB,UAApB,CAAX;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACtB,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7CN,IAAAA,EAAE,CAACO,WAAH,CAAe,UAACC,EAAD,EAAQ;AACnBA,MAAAA,EAAE,CAACC,UAAH,CAAc,wGAAd,EACA,EADA,EAEA,YAAM;AACFJ,QAAAA,OAAO;AACV,OAJD,EAKA,UAACK,CAAD,EAAIC,GAAJ,EAAY;AACRL,QAAAA,MAAM,CAACK,GAAD,CAAN;AACH,OAPD;AASH,KAVD;AAWH,GAZe,CAAhB;AAaA,SAAOR,OAAP;AACH,CAfM;AAiBP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAC1C,MAAMX,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7CN,IAAAA,EAAE,CAACO,WAAH,CAAe,UAACC,EAAD,EAAQ;AACnBA,MAAAA,EAAE,CAACC,UAAH,sDACA,CAACI,IAAD,EAAOC,QAAP,CADA,EAEA,UAACJ,CAAD,EAAIK,MAAJ,EAAe;AACXV,QAAAA,OAAO,CAACU,MAAD,CAAP;AACH,OAJD,EAKA,UAACL,CAAD,EAAIC,GAAJ,EAAY;AACRL,QAAAA,MAAM,CAACK,GAAD,CAAN;AACH,OAPD;AASH,KAVD;AAWH,GAZe,CAAhB;AAaA,SAAOR,OAAP;AACH,CAfM;AAiBP,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC5B,MAAMb,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7CN,IAAAA,EAAE,CAACO,WAAH,CAAe,UAACC,EAAD,EAAQ;AACnBA,MAAAA,EAAE,CAACC,UAAH,wBACA,EADA,EAEA,UAACC,CAAD,EAAIK,MAAJ,EAAe;AACXV,QAAAA,OAAO,CAACU,MAAD,CAAP;AACH,OAJD,EAKA,UAACL,CAAD,EAAIC,GAAJ,EAAY;AACRL,QAAAA,MAAM,CAACK,GAAD,CAAN;AACH,OAPD;AASH,KAVD;AAWH,GAZe,CAAhB;AAaA,SAAOR,OAAP;AACH,CAfM","sourcesContent":["import * as SQLite from 'expo-sqlite';\r\n\r\nconst db = SQLite.openDatabase('notes.db');\r\n\r\nexport const init = () => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        db.transaction((tx) => {\r\n            tx.executeSql('CREATE TABLE IF NOT EXISTS notes (id INTEGER PRIMARY KEY NOT NULL, note TEXT NOT NULL, imageUri TEXT);',\r\n            [],\r\n            () => {\r\n                resolve();\r\n            },\r\n            (_, err) => {\r\n                reject(err);\r\n            }\r\n            );\r\n        });\r\n    });\r\n    return promise;\r\n};\r\n\r\nexport const insertNote = (note, imageUri) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        db.transaction((tx) => {\r\n            tx.executeSql(`INSERT INTO notes (note, imageUri) VALUES (?, ?);`,\r\n            [note, imageUri],\r\n            (_, result) => {\r\n                resolve(result);\r\n            },\r\n            (_, err) => {\r\n                reject(err);\r\n            }\r\n            );\r\n        });\r\n    });\r\n    return promise;\r\n};\r\n\r\nexport const fetchNotes = () => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        db.transaction((tx) => {\r\n            tx.executeSql(`SELECT * FROM notes`,\r\n            [],\r\n            (_, result) => {\r\n                resolve(result);\r\n            },\r\n            (_, err) => {\r\n                reject(err);\r\n            }\r\n            );\r\n        });\r\n    });\r\n    return promise;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}